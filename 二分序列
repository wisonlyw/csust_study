#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int n;
    cin >> n;
    vector<long long> nums(n);
    for (int i = 0; i < n; i++) {
        cin >> nums[i];
    }

    vector<long long> tails; // 存储递增子序列的最小尾部元素
    
    for (long long x : nums) {
        // 使用二分查找找到第一个大于等于x的元素位置
        auto it = lower_bound(tails.begin(), tails.end(), x);
        
        if (it == tails.end()) {
            // 当前元素大于所有尾部元素，扩展序列
            tails.push_back(x);
        } else {
            // 替换第一个大于等于x的元素，保持尾部尽可能小
            *it = x;
        }
    }

    cout << tails.size();
    return 0;
}
