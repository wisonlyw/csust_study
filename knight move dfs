#include<bits/stdc++.h>

using namespace std;

int minv = 10000;
int cnt = 0;
int dx[8] = {-2,-2,-1,-1,1,1,2,2};
int dy[8] = {-1,1,-2,2,-2,2,-1,1};
bool visited[500][500] = {false};

bool isPossible(int x , int y , int edge){
    return x >= 0 && x < edge && y >= 0 && y < edge && !visited[x][y];
}

void dfs(int startX ,int startY , int endX , int endY , int edge){
    if (startX == endX && startY == endY){
        minv = min(minv,cnt);
        return;
    }
    for (int i = 0 ; i < 8 ; i++){
        if (isPossible(startX+dx[i],startY+dy[i],edge)&&cnt<=minv){
            cnt++;
            startX += dx[i];
            startY += dy[i];
            visited[startX][startY] = true;
            dfs(startX , startY , endX , endY , edge);
            visited[startX][startY] = false;
            startX -= dx[i];
            startY -= dy[i];
            cnt--;
        }
    }
}

int main(){
    int n;
    cin >> n;
    while (n--){
       int edge;
        cin >> edge;
        int x0 , y0;
        cin >> x0 >> y0;
        visited[x0][y0] = true;
        int x1 , y1;
        cin >> x1 >> y1;
        dfs(x0,y0,x1,y1,edge);
        cout << minv << endl;
        minv = 10000;
        visited[500][500] = {false};
        cnt = 0;
    }

}
